swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:8080
basePath: /
tags:
  - name: basic-error-controller
    description: Basic Error Controller
  - name: main-controller
    description: Main Controller
paths:
  /error:
    get:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    head:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingHEAD
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
    post:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingDELETE
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
    options:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
    patch:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /request_parser/api/v1/from_file:
    post:
      tags:
        - main-controller
      summary: getFromFile
      operationId: getFromFileUsingPOST
      consumes:
        - multipart/form-data
      produces:
        - '*/*'
      parameters:
        - name: file
          in: formData
          description: file
          required: true
          type: file
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /request_parser/api/v1/from_json:
    post:
      tags:
        - main-controller
      summary: info
      operationId: infoUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            type: array
            minLength: 1
            items:
              $ref: '#/definitions/Info'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
definitions:
  Info:
    type: object
    required:
      - caseCount
      - checkListTestCount
      - complexityCoefficient
      - hasAutotests
      - isAllTestersWorkFullDay
      - isBackDone
      - isFrontDone
      - isStandAvailable
      - optimisticGrade
      - pessimisticGrade
      - taskNumber
      - testPriority
      - timeForOneCase
      - timeForOneTest
    properties:
      caseCount:
        type: integer
        format: int32
        minimum: 0
      checkListTestCount:
        type: integer
        format: int32
        minimum: 0
      complexityCoefficient:
        type: integer
        format: int32
        minimum: 0
        maximum: 5
      hasAutotests:
        type: boolean
      isAllTestersWorkFullDay:
        type: boolean
      isBackDone:
        type: boolean
      isFrontDone:
        type: boolean
      isStandAvailable:
        type: boolean
      optimisticGrade:
        type: number
        format: double
        minimum: 0
      pessimisticGrade:
        type: number
        format: double
        minimum: 0
      taskNumber:
        type: string
        minLength: 1
      testPriority:
        type: array
        minLength: 1
        enum: ["critical", "medium", "low"]
        items:
          type: string
      timeForOneCase:
        type: number
        format: double
        minimum: 0
      timeForOneTest:
        type: number
        format: double
    title: Info
  Response:
    type: object
    properties:
      tasks:
        type: array
        items:
          $ref: '#/definitions/Task'
    title: Response
  Task:
    type: object
    properties:
      fpValue:
        type: string
      pertValue:
        type: string
      summaryValue:
        type: string
      taskNumber:
        type: string
      ucpValue:
        type: string
    title: Task
